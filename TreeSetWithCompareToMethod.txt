TreeSet with CompareTo method

Does Not allow null to be stored even if null is added as first item or at any other time. TreeSet stores 
elements according to their natural ordering. All classes Interger, Character, String ,Float, Double, Long, Boolean implements Comparable interface and hence there is not explicit need to creat compareTo method in programmer class. user defined types whose objects need to be added in TreeSet must Explicitly define compareTo method to compare objects to store them in ascending order plus in case of duplicates. Absence of this will result in ClassCaseException. Moreover classes StringBuffer and StringBuilder did not implemented Comparable interface. So class need to implement compareTo method to work on them.

Example:-
package collectionframework;

import java.util.TreeSet;

class Employee implements Comparable<Employee>{
	
	int id;
	String name;
	
	public Employee(int id, String name) {
		
		this.id = id;
		this.name = name;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Override// need this compareTo method to compare used defined object for their ordering and duplicacy
	public int compareTo(Employee emp) {
	
		if(id > emp.id)
			return 1;
		else if (id<emp.id)
			return -1;
		return 0;
	}	
}

public class TreeSetWithCompareToMethod{
	
	public static void main(String args[]) {
		
		Employee e1 = new Employee(1,"abc");
		Employee e2 = new Employee(0,"abc");
		
		TreeSet<Employee> ts = new TreeSet<Employee>();
		ts.add(e1);
		ts.add(e2);
		ts.forEach(emp -> {System.out.println(emp.id);});
	}

}

